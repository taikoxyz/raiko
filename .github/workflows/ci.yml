name: CI

on:
  push:
    branches: ["main"]
  pull_request:

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    name: Build and test
    runs-on: ubuntu-latest
    timeout-minutes: 120
    strategy:
      matrix:
        VERSIONS: [
          {name: native, toolchain: nightly-2024-04-17},
          {name: sp1, toolchain: nightly-2024-04-17},
          {name: risc0, toolchain: stable},
          {name: sgx, toolchain: stable},
        ]
    env:
      TARGET: ${{ matrix.VERSIONS.name }}
      CI: 1
      MOCK: 1

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
            toolchain: ${{ matrix.VERSIONS.toolchain }}
            profile: minimal

      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@v1.6.4

      - name: Setup sccache
        if: ${{ matrix.VERSIONS.name }} == risc0
        uses: risc0/risc0/.github/actions/sccache@release-0.19

      - name: Install ${{ matrix.VERSIONS.name }}
        run: make install

      - name: Build ${{ matrix.VERSIONS.name }} prover
        run: make build

      - name: Test ${{ matrix.VERSIONS.name }} prover
        run: make test
        
      - name: Build with tracer
        if: ${{ matrix.VERSIONS.name }} == native
        run: cargo build -F tracer

  build-test-sgx-hardware:
    name: Build and test sgx in hardware
    runs-on: [self-hosted, sgx, linux]
    timeout-minutes: 120
    env:
      TARGET: sgx
      CI: 1
      EDMM: 0

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@v1.6.4

      - name: Install sgx
        run: make install

      - name: Build sgx prover
        run: make build

      - name: Test sgx prover
        run: make test

  build-test-sgx-with-docker:
    name: Build and test sgx with Docker
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4
      - name: Setup and build
        run: |
          cd docker
          docker compose build --no-cache
        shell: bash

  test-lib:
    name: Test raiko-lib
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal

      - run: cargo test -p raiko-lib --features=std

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - uses: risc0/risc0/.github/actions/rustup@release-0.19

      - uses: risc0/risc0/.github/actions/sccache@release-0.19

      - uses: risc0/clippy-action@main
        with:
          reporter: 'github-pr-check'
          fail_on_error: true
          clippy_flags: --workspace --all-targets --all-features -- -Dwarnings

  fmt:
    name: fmt
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - uses: risc0/risc0/.github/actions/rustup@release-0.19

      - run: make fmt
