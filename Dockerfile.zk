FROM rust:1.79.0 AS base-builder

ENV DEBIAN_FRONTEND=noninteractive
ARG BUILD_FLAGS=""

RUN apt-get update && \
    apt-get install -y \
    build-essential \
    cracklib-runtime \
    jq \
    clang \
    sudo && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /opt/raiko
# build related files
COPY makefile makefile
COPY script script
RUN ls -al > /tmp/file_list.txt
RUN cat /tmp/file_list.txt

ENV TARGET=risc0
RUN mkdir -p ~/.cargo/bin
RUN echo "Building for risc0"
RUN make install
RUN echo "Building for sp1"
ENV TARGET=sp1
RUN make install

FROM base-builder AS builder

ENV DEBIAN_FRONTEND=noninteractive
ARG BUILD_FLAGS=""

WORKDIR /opt/raiko
# build related files
COPY Cargo.lock Cargo.lock
COPY Cargo.toml Cargo.toml
COPY lib lib
COPY provers provers
COPY host host
COPY pipeline pipeline
COPY harness harness
COPY rust-toolchain rust-toolchain
COPY kzg_settings_raw.bin kzg_settings_raw.bin
COPY core core
COPY tasks tasks
COPY makefile makefile
COPY script script
RUN ls -al > /tmp/file_list.txt
RUN cat /tmp/file_list.txt

ENV TARGET=risc0
RUN mkdir -p ~/.cargo/bin
RUN echo "Building for risc0"
RUN make guest
RUN echo "Building for sp1"
ENV TARGET=sp1
RUN make guest
RUN cargo build --release ${BUILD_FLAGS} --features "sp1,risc0" --features "docker_build"

#FROM rust:1.79.0 as raiko-zk
FROM ubuntu:22.04 AS raiko-zk
RUN mkdir -p \
    ./bin \
    /etc/raiko \
    /var/log/raiko \
    /tmp/risc0-cache

# copy to /etc/raiko, but if self register mode, the mounted one will overwrite it.
COPY --from=builder /opt/raiko/host/config/config.sgx.json /etc/raiko/
COPY --from=builder /opt/raiko/host/config/chain_spec_list_default.json /etc/raiko/chain_spec_list.docker.json
COPY --from=builder /opt/raiko/host/config/chain_spec_list_devnet.json /etc/raiko/chain_spec_list.devnet.json
COPY --from=builder /opt/raiko/target/release/raiko-host /opt/raiko/bin/

WORKDIR /opt/raiko/bin
COPY ./docker/entrypoint.sh /opt/raiko/bin/
ENTRYPOINT [ "/opt/raiko/bin/entrypoint.sh" ]